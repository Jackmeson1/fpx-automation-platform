# Verify non-basic authz header is not stripped when the basic user is the same as the authenticated user on FPX
<INIT>

<TCID>

<SETUP>
[FPX1]
dia de en
d de cr r
d de cr cl

dia wad user cl
dia fire auth cl

SLEEP 1

<TEST>
[PC1]
#base64 values
echo -n 'a:a' | base64
setvar -e base64\s+(\w+) -to ua_b64
[LOCAL]
authz_basic_a = Authorization: Basic PC1:ua_b64
authz_token_a = Authorization: Token a

[PC1]
#authenticate basic user a on FPX
@(expect = HTTP/.*[23]\d\d)
curl http://SERVER1:FQDN/files/testfile -kv -ua:a
[FPX1]
@(expect = user name.*:)
dia wad user list

#HTTP request with Authz of user a is stripped but other is not
#GET
[SERVER1]
#tcpflow -i($IF_SERVER) -c
SENDLINE tcpflow -i($IF_SERVER) -c
[PC1]
@(expect = HTTP/.*200\sOK)
curl http://SERVER1:FQDN/files/testfile -kv -ua:a --http2 -: http://SERVER1:FQDN -kvI -H'($authz_token_a)' --http2
[SERVER1]
@(expect = ($authz_token_a); error = ($authz_basic_a))
CTRL_C

#POST
[SERVER1]
#tcpflow -i($IF_SERVER) -c
SENDLINE tcpflow -i($IF_SERVER) -c
[PC1]
@(expect = HTTP/.*200\sOK)
curl -d'test' http://SERVER1:FQDN/files/testfile -kv -ua:a -: -d'test' http://SERVER1:FQDN/files/testfile -kv -H'($authz_token_a)' --http1.1
[SERVER1]
@(expect = ($authz_token_a); error = ($authz_basic_a))
CTRL_C

#HTTP request with Authz of user a is stripped but other is not
[FPX1]
dia wad deb en c http
d de en
[PC1]
@(expect = HTTP/.*200\sOK)
curl https://SERVER1:FQDN/files/testfile -kv -ua:a -: https://SERVER1:FQDN -kvI -H'($authz_token_a)' --http1.1
[FPX1]
@(expect = to\sserver[\s\S]*($authz_token_a); error = to\sserver[\s\S]*($authz_basic_a))
ENTER

[PC1]
@(expect = HTTP/.*2\d\d)
curl -T upload_testfile https://SERVER1:FQDN/upload/ -kv --http2 -ua:a -: -Tupload_testfile https://SERVER1:FQDN/upload/ -kv -H'($authz_token_a)' --http2
[FPX1]
@(expect = to\sserver[\s\S]*($authz_token_a); error = to\sserver[\s\S]*($authz_basic_a))
ENTER
dia wad deb cl
dia de dis


<TEARDOWN>
[FPX1]
dia wad user cl
dia fire auth cl

dia de reset
@(error=Traceback:)
d de cr r
