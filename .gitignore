# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# IDEs
.vscode/
.idea/
*.swp
*.swo
*~

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is generally recommended to ignore the cache and local settings directories.
#  but not the entire .idea/ directory because it contains useful information about the project.
.idea/**/workspace.xml
.idea/**/tasks.xml
.idea/**/usage.statistics.xml
.idea/**/dictionaries
.idea/**/shelf

# Generated by MacOS
.DS_Store

# Windows thumbnail cache files
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db

# Dump file
*.stackdump

# Folder config file
[Dd]esktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# Windows Installer files
*.cab
*.msi
*.msix
*.msm
*.msp

# Windows shortcuts
*.lnk

# Test execution logs and outputs
*.log
*.trace
logs/
log/
test_logs/
test_results/
results/
output/
reports/

# Network capture files
*.pcap
*.pcapng
*.cap
*.dump

# Debugging files
*.dump
*.trace
*.debug
debug/

# Cache directories
cache/
.cache/
tmp/
temp/
temporary/

# Test data and temporary files
test_data/
temp_data/
*.tmp
*.temp

# Backup files
backup/
backups/
*.bak
*.backup
*~

# Configuration files with sensitive data
config.ini
settings.ini
credentials.ini
secrets.ini
.env.local
.env.production
.env.development

# Database files
*.db
*.sqlite
*.sqlite3

# Compiled source
*.com
*.class
*.dll
*.exe
*.o
*.so

# Archives
*.7z
*.dmg
*.gz
*.iso
*.jar
*.rar
*.tar
*.zip

# FGT/FortiGate specific test files
*.cfg.bak
*.conf.bak
fortios_debug/
fgt_logs/
system_logs/

# Test automation specific
automation_cache/
test_cache/
execution_cache/
screenshot/
screenshots/

# Virtual environments (additional patterns)
pyvenv.cfg
pip-selfcheck.json

# Pytest
.pytest_cache/
pytest.ini

# Tox
.tox/

# Coverage reports
.coverage
htmlcov/

# Profiling data
.prof

# Node modules (if any JS tools are used)
node_modules/

# Package files
*.egg
*.egg-info

# OS generated files
*.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
Icon?

# Temporary files
*~
*.swp
*.tmp 