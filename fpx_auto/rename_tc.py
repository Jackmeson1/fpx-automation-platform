#!/usr/bin/python3
'''
Rename TC script files based on QAID generated by Oriole.

- Leonardo Chen
'''

import pandas as pd
import argparse
import numpy
import shutil

def main():
    parser = argparse.ArgumentParser(description='rename TC script files based on QAID generated by Oriole')
    parser.add_argument('orig_csv', help='original CSV file with QAID(script file name) used for debugging')
    parser.add_argument('gen_csv', help='CSV file exported from Oriole with QAID generated by the system.')
    parser.add_argument('-mv', '--mv', action='store_true', default=False, help='donot keep the original script files')
    args = parser.parse_args()

    with open(args.orig_csv, 'r') as f:
        df_orig = pd.read_csv(f)
    with open(args.gen_csv, 'r') as f:
        df_gen = pd.read_csv(f)

    # r_orig = len(df_orig.index)
    rows = len(df_gen)
    # assert (rows==r_orig)
    for i in range(rows):
        dst = str(int(df_gen.QAID[i]))
        objective = df_gen.Objective[i]
        src = df_orig[df_orig.Objective.apply(lambda x: x.strip()) == objective.strip()].QAID
        if numpy.any(src):
            if type(src) is not str:
                src = str(int(src))
            try:
                if args.mv:
                    shutil.move(src, dst)
                else:
                    shutil.copyfile(src, dst)
            except FileNotFoundError:
                print("TC script: {} doesn't exist.".format(src))
            except Exception as e:
                print('Failed to copy file {} to {}. with exception "{}"'.format(src, dst, str(e)))
        else:
            print('TC: {} - {} could not be found in the orig csv.'.format(dst, objective))

if __name__ == '__main__':
    main()
